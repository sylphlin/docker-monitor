version: '2'

services:

  telegraf:
    image: telegraf 
    container_name: telegraf 
    volumes:
      - ./etc/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    networks:
      - backend 
    restart: always

  influxdb:
    image: influxdb 
    container_name: influxdb 
    volumes:
      - ./volumne/influxdb/:/var/lib/influxdb/
      - ./etc/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
    networks:
      - backend 
    restart: always

  kapacitor:
    image: kapacitor
    container_name: kapacitor 
    volumes:
      - ./kapacitor/kapacitor.conf:/etc/kapacitor/kapcitor.conf
      - ./volumne/kapacitor/:/var/lib/kapacitor/
      - ./volumne/kapacitor/log/:/var/log/kapacitor/
    environment:
      KAPACITOR_HOSTNAME: 'kapacitor'
      KAPACITOR_INFLUXDB_0_URLS_0: 'http://influxdb:8086'
      KAPACITOR_SLACK_ENABLED: 'true'
      KAPACITOR_SLACK_URL: 'http://example.com' 
      KAPACITOR_SLACK_CHANNEL: 'monitor'
      KAPACITOR_SLACK_GLOBAL: 'true'
      KAPACITOR_SLACK_STATE_CHANGES_ONLY: 'true'
    ports:
      - "9092:9092"
    networks:
      - backend 
    restart: always

  chronograf:
    image: chronograf
    container_name: chronograf 
    volumes:
      - ./volumne/chronograf/:/var/lib/chronograf/
    networks:
      - backend 
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - ./volumne/grafana/:/var/lib/grafana/
    environment:
      - GF_SERVER_ROOT_URL=http://grafana.devops.pmmyth.com
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      - backend 
    restart: always

  nginx:
    image: nginx 
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/conf.d/monitor.conf:/etc/nginx/conf.d/monitor.conf
    restart: always
    depends_on:
      - telegraf
      - influxdb
      - kapacitor
      - chronograf
      - grafana
    networks:
      - frontend
      - backend 

  # Define a service for using the influx CLI tool.
  # docker-compose run influxdb-cli
  influxdb-cli:
    image: influxdb
    container_name: influxdb-cli 
    entrypoint:
      - influx
      - -host
      - influxdb
    networks:
      - backend

  # Define a service for using the kapacitor CLI tool.
  # docker-compose run kapacitor-cli
  kapacitor-cli:
    image: kapacitor
    container_name: kapacitor-cli 
    entrypoint: bash
    environment:
      KAPACITOR_URL: http://kapacitor:9092
    networks:
      - backend

networks:
  frontend:
  backend:
